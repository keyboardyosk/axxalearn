const tg = window.Telegram.WebApp;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
tg.expand();
tg.ready();

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const user = tg.initDataUnsafe?.user;
const userId = user?.id || 12345; // Fallback –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

let questions = [];
let currentQuestionIndex = 0;
let correctAnswers = 0;
let userAnswers = [];

// –ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
async function loadQuestions() {
    try {
        const response = await fetch('/api/questions');
        const data = await response.json();
        questions = data.questions;
        loadQuestion();
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤:', error);
        document.getElementById('question').textContent = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤';
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
function loadQuestion() {
    if (currentQuestionIndex >= questions.length) {
        showFinalResult();
        return;
    }

    const question = questions[currentQuestionIndex];

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    updateProgress();

    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
    document.getElementById('question').textContent = question.question;

    // –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–æ–≤
    const optionsContainer = document.getElementById('options-container');
    optionsContainer.innerHTML = '';

    question.options.forEach((option, index) => {
        const button = document.createElement('button');
        button.className = 'option-button';
        button.textContent = option;
        button.onclick = () => selectAnswer(option, button);
        optionsContainer.appendChild(button);
    });

    // –°–∫—Ä—ã—Ç–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    document.getElementById('result-container').style.display = 'none';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
function updateProgress() {
    const progress = ((currentQuestionIndex + 1) / questions.length) * 100;
    document.getElementById('progress-fill').style.width = progress + '%';
    document.getElementById('current-question').textContent = currentQuestionIndex + 1;
    document.getElementById('total-questions').textContent = questions.length;
}

// –í—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞
async function selectAnswer(selectedAnswer, buttonElement) {
    // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
    const allButtons = document.querySelectorAll('.option-button');
    allButtons.forEach(btn => btn.disabled = true);

    const question = questions[currentQuestionIndex];

    try {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        const response = await fetch('/api/submit_answer', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                user_id: userId,
                question_id: question.id,
                user_answer: selectedAnswer
            })
        });

        const result = await response.json();

        // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        userAnswers.push({
            question: question.question,
            userAnswer: selectedAnswer,
            correctAnswer: question.answer,
            isCorrect: result.is_correct
        });

        if (result.is_correct) {
            correctAnswers++;
            buttonElement.classList.add('correct');
        } else {
            buttonElement.classList.add('incorrect');
            // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
            allButtons.forEach(btn => {
                if (btn.textContent.toLowerCase() === question.answer.toLowerCase()) {
                    btn.classList.add('correct');
                }
            });
        }

        // –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        showQuestionResult(result.is_correct, question.answer);

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', error);
        alert('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
        // –í–∫–ª—é—á–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –æ–±—Ä–∞—Ç–Ω–æ
        allButtons.forEach(btn => btn.disabled = false);
    }
}

// –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤–æ–ø—Ä–æ—Å–∞
function showQuestionResult(isCorrect, correctAnswer) {
    const resultContainer = document.getElementById('result-container');
    const resultMessage = document.getElementById('result-message');

    if (isCorrect) {
        resultMessage.innerHTML = '‚úÖ <strong>–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</strong>';
        resultMessage.className = 'result-correct';
    } else {
        resultMessage.innerHTML = `‚ùå <strong>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!</strong><br>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: <em>${correctAnswer}</em>`;
        resultMessage.className = 'result-incorrect';
    }

    resultContainer.style.display = 'block';
}

// –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É
function nextQuestion() {
    currentQuestionIndex++;
    loadQuestion();
}

// –ü–æ–∫–∞–∑ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
async function showFinalResult() {
    try {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const response = await fetch(`/api/user_stats/${userId}`);
        const stats = await response.json();

        const finalResult = document.getElementById('final-result');
        const finalStats = document.getElementById('final-stats');

        const percentage = Math.round((correctAnswers / questions.length) * 100);
        let emoji = 'üòî';
        let message = '–ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!';

        if (percentage >= 80) {
            emoji = 'üéâ';
            message = '–û—Ç–ª–∏—á–Ω–æ!';
        } else if (percentage >= 60) {
            emoji = 'üëç';
            message = '–•–æ—Ä–æ—à–æ!';
        } else if (percentage >= 40) {
            emoji = 'ü§î';
            message = '–ù–µ–ø–ª–æ—Ö–æ!';
        }

        finalStats.innerHTML = `
            <div class="final-score">
                <div class="score-circle">
                    <span class="score-number">${correctAnswers}/${questions.length}</span>
                    <span class="score-percentage">${percentage}%</span>
                </div>
                <div class="score-message">${emoji} ${message}</div>
            </div>
            <div class="overall-stats">
                <h3>üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</h3>
                <p>–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ—Ç–≤–µ—á–µ–Ω–æ: <strong>${stats.total_questions}</strong></p>
                <p>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: <strong>${stats.correct_answers}</strong></p>
                <p>–û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: <strong>${stats.accuracy}%</strong></p>
            </div>
        `;

        // –°–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
        document.getElementById('quiz-container').style.display = 'none';
        finalResult.style.display = 'block';

        // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ Telegram –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
        tg.showAlert(`–ö–≤–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç: ${correctAnswers}/${questions.length} (${percentage}%)`);

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
        document.getElementById('final-stats').innerHTML = `
            <div class="final-score">
                <div class="score-circle">
                    <span class="score-number">${correctAnswers}/${questions.length}</span>
                    <span class="score-percentage">${Math.round((correctAnswers / questions.length) * 100)}%</span>
                </div>
            </div>
        `;
        document.getElementById('quiz-container').style.display = 'none';
        document.getElementById('final-result').style.display = 'block';
    }
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∫–≤–∏–∑–∞
function restartQuiz() {
    currentQuestionIndex = 0;
    correctAnswers = 0;
    userAnswers = [];

    document.getElementById('final-result').style.display = 'none';
    document.getElementById('quiz-container').style.display = 'block';

    loadQuestion();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.getElementById('next-button').addEventListener('click', nextQuestion);
document.getElementById('restart-button').addEventListener('click', restartQuiz);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
loadQuestions();

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ Telegram
tg.MainButton.text = "–ó–∞–∫—Ä—ã—Ç—å";
tg.MainButton.show();
tg.MainButton.onClick(() => {
    tg.close();
});